#
# 20processes
#

LoadPlugin "processes"
LoadPlugin "threshold"

{
   use NethServer::Service;
   use esmith::ConfigDB;

   my $cdb = esmith::ConfigDB->open_ro();

   my @services = map { $_->key } $cdb->get_all_by_prop(type => 'service');

   %processes = ();

   foreach my $s (@services) {
      my $service = NethServer::Service->new($s, $cdb);
      if($service->is_enabled() && $service->is_owned()) {
           $processes{$s} = defined $svcconf{$s} ? $svcconf{$s} : {
               'min' => 1,
           };
      }
   }
   '';
}

<Plugin processes>
{
    foreach (keys %processes) {
       if(defined  $processes{$_}{'match'}) {
          $OUT .= "  ProcessMatch \"$_\" \"$processes{$_}{'match'}\"\n";
       } else {
          $OUT .= "  Process \"$_\"\n";
       }
    }
}
</Plugin>

<Plugin threshold>
    {
    foreach (keys %processes) {
        if($processes{$_}{'min'} > 0) {
    $OUT .= "
    <Plugin processes>
         Instance \"$_\"
         <Type \"ps_count\">
            FailureMin $processes{$_}{'min'}.0
         </Type>
    </Plugin>
    ";

        }
    }
    }

 <Plugin "load">
  <Type "load-relative">
     DataSource "midterm"
     WarningMax 1
     FailureMax 10
     Hits 3
     Hysteresis 3
  </Type>
 </Plugin>

 <Plugin "df">
    Instance "boot"
    <Type  "percent_bytes">
       Instance "free"
       FailureMin 15
       Hysteresis 2
    </Type>
 </Plugin>

 <Plugin "df">
    Instance "root"
    <Type  "percent_bytes">
       Instance "free"
       FailureMin 15
       Hysteresis 2
    </Type>
 </Plugin>

 <Plugin "swap">
    <Type "percent">
       Instance "free"
       FailureMin 10
       Hysteresis 1
    </Type>
 </Plugin>

  <Plugin "memory">
    <Type "percent">
       Instance "free"
       FailureMin 1.0
    </Type>
 </Plugin>

 <Plugin "uptime">
    <Type "uptime">
       FailureMin 600
    </Type>
 </Plugin>

 <Plugin "md">
     <Type "failed">
       FailureMax 1.0
     </Type>
 </Plugin>

 <Plugin "lsm">
     <Type "count">
       Instance "down"
       FailureMax 1.0
     </Type>
 </Plugin>

{
  use esmith::ConfigDB;
  my $cdb = esmith::ConfigDB->open_ro();
  my $backup = $cdb->get('backup-data');
  my $status = (($backup && $backup->prop('status')) || 'disabled');

  if ($status eq 'enabled') {
    $OUT .= ' <Plugin "table">'. "\n";
    $OUT .= '   <Type "gauge">'. "\n";
    $OUT .= '     Instance "Errors"'. "\n";
    $OUT .= '     FailureMax 0'. "\n";
    $OUT .= '   </Type>'. "\n";
    $OUT .= ' </Plugin>'. "\n";
  }
}

</Plugin>
